from .abstract_lattice import AbstractLattice
import numpy as np
import numpy.typing as npt
import math as m

class Kelvin(AbstractLattice):
    """
    Class to create a unit kelvin lattice of given cell size and density or strut radius
    """

    def __init__(self,
                 *args, **kwargs
                 ) -> None:

        super().__init__(*args, **kwargs, strut_number=72, strut_heights=(1 / (1.0 + 2.0*m.sqrt(2))))


    def _compute_vertices(self) -> npt.NDArray[np.float64]:
        vertices_array = self.center + self.cell_size * np.array([
            [1.0, (1.0 + m.sqrt(2)), (1.0 + 2.0*m.sqrt(2))],
            [1.0, -(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2))],
            [1.0, (1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2))],
            [1.0, -(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2))],
            [1.0, (1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2))],
            [1.0, -(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2))],
            [1.0, (1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2))],
            [1.0, -(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2))],
            [-1.0, (1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2))],
            [-1.0, -(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2))],
            [-1.0, (1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2))],
            [-1.0, -(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2))],
            [-1.0, (1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2))],
            [-1.0, -(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2))],
            [-1.0, (1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2))],
            [-1.0, -(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2))],
            [(1.0 + 2.0 * m.sqrt(2)), 1.0, (1.0 + m.sqrt(2))],
            [(1.0 + 2.0 * m.sqrt(2)), -1.0, (1.0 + m.sqrt(2))],
            [(1.0 + 2.0 * m.sqrt(2)), 1.0, -(1.0 + m.sqrt(2))],
            [(1.0 + 2.0 * m.sqrt(2)), -1.0, -(1.0 + m.sqrt(2))],
            [(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2)), 1.0],
            [(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2)), 1.0],
            [(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2)), -1.0],
            [(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2)), -1.0],
            [-(1.0 + 2.0 * m.sqrt(2)), 1.0, (1.0 + m.sqrt(2))],
            [-(1.0 + 2.0 * m.sqrt(2)), -1.0, (1.0 + m.sqrt(2))],
            [-(1.0 + 2.0 * m.sqrt(2)), 1.0, -(1.0 + m.sqrt(2))],
            [-(1.0 + 2.0 * m.sqrt(2)), -1.0, -(1.0 + m.sqrt(2))],
            [-(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2)), 1.0],
            [-(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2)), 1.0],
            [-(1.0 + 2.0 * m.sqrt(2)), (1.0 + m.sqrt(2)), -1.0],
            [-(1.0 + 2.0 * m.sqrt(2)), -(1.0 + m.sqrt(2)), -1.0],
            [(1.0 + m.sqrt(2)), 1.0, (1.0 + 2.0 * m.sqrt(2))],
            [(1.0 + m.sqrt(2)), -1.0, (1.0 + 2.0 * m.sqrt(2))],
            [(1.0 + m.sqrt(2)), 1.0, -(1.0 + 2.0 * m.sqrt(2))],
            [(1.0 + m.sqrt(2)), -1.0, -(1.0 + 2.0 * m.sqrt(2))],
            [(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2)), 1.0],
            [(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2)), 1.0],
            [(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2)), -1.0],
            [(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2)), -1.0],
            [-(1.0 + m.sqrt(2)), 1.0, (1.0 + 2.0 * m.sqrt(2))],
            [-(1.0 + m.sqrt(2)), -1.0, (1.0 + 2.0 * m.sqrt(2))],
            [-(1.0 + m.sqrt(2)), 1.0, -(1.0 + 2.0 * m.sqrt(2))],
            [-(1.0 + m.sqrt(2)), -1.0, -(1.0 + 2.0 * m.sqrt(2))],
            [-(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2)), 1.0],
            [-(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2)), 1.0],
            [-(1.0 + m.sqrt(2)), (1.0 + 2.0 * m.sqrt(2)), -1.0],
            [-(1.0 + m.sqrt(2)), -(1.0 + 2.0 * m.sqrt(2)), -1.0],
        ]) / (2.0 + 4.0*m.sqrt(2))

        return vertices_array

    def _compute_strut_centers(self) -> npt.NDArray[np.float64]:
        centers_array = np.array([
            (self.vertices[2] + self.vertices[6]),
            (self.vertices[6] + self.vertices[38]),
            (self.vertices[38] + self.vertices[22]),
            (self.vertices[22] + self.vertices[18]),
            (self.vertices[18] + self.vertices[34]),
            (self.vertices[34] + self.vertices[2]),
            (self.vertices[6] + self.vertices[14]),
            (self.vertices[14] + self.vertices[10]),
            (self.vertices[10] + self.vertices[2]),
            (self.vertices[38] + self.vertices[36]),
            (self.vertices[20] + self.vertices[36]),
            (self.vertices[22] + self.vertices[20]),
            (self.vertices[34] + self.vertices[35]),
            (self.vertices[35] + self.vertices[19]),
            (self.vertices[18] + self.vertices[19]),
            (self.vertices[10] + self.vertices[42]),
            (self.vertices[42] + self.vertices[43]),
            (self.vertices[43] + self.vertices[11]),
            (self.vertices[11] + self.vertices[3]),
            (self.vertices[3] + self.vertices[35]),
            (self.vertices[3] + self.vertices[7]),
            (self.vertices[7] + self.vertices[39]),
            (self.vertices[39] + self.vertices[23]),
            (self.vertices[23] + self.vertices[19]),
            (self.vertices[23] + self.vertices[21]),
            (self.vertices[21] + self.vertices[37]),
            (self.vertices[39] + self.vertices[37]),
            (self.vertices[21] + self.vertices[17]),
            (self.vertices[17] + self.vertices[16]),
            (self.vertices[16] + self.vertices[20]),
            (self.vertices[16] + self.vertices[32]),
            (self.vertices[17] + self.vertices[33]),
            (self.vertices[33] + self.vertices[32]),
            (self.vertices[32] + self.vertices[0]),
            (self.vertices[0] + self.vertices[4]),
            (self.vertices[36] + self.vertices[4]),
            (self.vertices[37] + self.vertices[5]),
            (self.vertices[5] + self.vertices[1]),
            (self.vertices[1] + self.vertices[33]),
            (self.vertices[7] + self.vertices[15]),
            (self.vertices[11] + self.vertices[15]),
            (self.vertices[15] + self.vertices[47]),
            (self.vertices[47] + self.vertices[45]),
            (self.vertices[45] + self.vertices[13]),
            (self.vertices[13] + self.vertices[5]),
            (self.vertices[47] + self.vertices[31]),
            (self.vertices[43] + self.vertices[27]),
            (self.vertices[27] + self.vertices[31]),
            (self.vertices[42] + self.vertices[26]),
            (self.vertices[27] + self.vertices[26]),
            (self.vertices[26] + self.vertices[30]),
            (self.vertices[46] + self.vertices[30]),
            (self.vertices[14] + self.vertices[46]),
            (self.vertices[46] + self.vertices[44]),
            (self.vertices[44] + self.vertices[12]),
            (self.vertices[12] + self.vertices[4]),
            (self.vertices[12] + self.vertices[8]),
            (self.vertices[8] + self.vertices[0]),
            (self.vertices[8] + self.vertices[40]),
            (self.vertices[41] + self.vertices[40]),
            (self.vertices[41] + self.vertices[9]),
            (self.vertices[9] + self.vertices[1]),
            (self.vertices[9] + self.vertices[13]),
            (self.vertices[44] + self.vertices[28]),
            (self.vertices[28] + self.vertices[30]),
            (self.vertices[28] + self.vertices[24]),
            (self.vertices[24] + self.vertices[40]),
            (self.vertices[24] + self.vertices[25]),
            (self.vertices[25] + self.vertices[41]),
            (self.vertices[25] + self.vertices[29]),
            (self.vertices[29] + self.vertices[31]),
            (self.vertices[29] + self.vertices[45])
        ]) / 2.0

        return centers_array

    def _compute_strut_directions(self) -> npt.NDArray[np.float64]:
        directions_array = np.array([
            (self.vertices[2] - self.vertices[6]) / np.linalg.norm((self.vertices[2] - self.vertices[6])),
            (self.vertices[6] - self.vertices[38]) / np.linalg.norm((self.vertices[6] - self.vertices[38])),
            (self.vertices[38] - self.vertices[22]) / np.linalg.norm((self.vertices[38] - self.vertices[22])),
            (self.vertices[22] - self.vertices[18]) / np.linalg.norm((self.vertices[22] - self.vertices[18])),
            (self.vertices[18] - self.vertices[34]) / np.linalg.norm((self.vertices[18] - self.vertices[34])),
            (self.vertices[34] - self.vertices[2]) / np.linalg.norm((self.vertices[34] - self.vertices[2])),
            (self.vertices[6] - self.vertices[14]) / np.linalg.norm((self.vertices[6] - self.vertices[14])),
            (self.vertices[14] - self.vertices[10]) / np.linalg.norm((self.vertices[14] - self.vertices[10])),
            (self.vertices[10] - self.vertices[2]) / np.linalg.norm((self.vertices[10] - self.vertices[2])),
            (self.vertices[38] - self.vertices[36]) / np.linalg.norm((self.vertices[38] - self.vertices[36])),
            (self.vertices[20] - self.vertices[36]) / np.linalg.norm((self.vertices[20] - self.vertices[36])),
            (self.vertices[22] - self.vertices[20]) / np.linalg.norm((self.vertices[22] - self.vertices[20])),
            (self.vertices[34] - self.vertices[35]) / np.linalg.norm((self.vertices[34] - self.vertices[35])),
            (self.vertices[35] - self.vertices[19]) / np.linalg.norm((self.vertices[35] - self.vertices[19])),
            (self.vertices[18] - self.vertices[19]) / np.linalg.norm((self.vertices[18] - self.vertices[19])),
            (self.vertices[10] - self.vertices[42]) / np.linalg.norm((self.vertices[10] - self.vertices[42])),
            (self.vertices[42] - self.vertices[43]) / np.linalg.norm((self.vertices[42] - self.vertices[43])),
            (self.vertices[43] - self.vertices[11]) / np.linalg.norm((self.vertices[43] - self.vertices[11])),
            (self.vertices[11] - self.vertices[3]) / np.linalg.norm((self.vertices[11] - self.vertices[3])),
            (self.vertices[3] - self.vertices[35]) / np.linalg.norm((self.vertices[3] - self.vertices[35])),
            (self.vertices[3] - self.vertices[7]) / np.linalg.norm((self.vertices[3] - self.vertices[7])),
            (self.vertices[7] - self.vertices[39]) / np.linalg.norm((self.vertices[7] - self.vertices[39])),
            (self.vertices[39] - self.vertices[23]) / np.linalg.norm((self.vertices[39] - self.vertices[23])),
            (self.vertices[23] - self.vertices[19]) / np.linalg.norm((self.vertices[23] - self.vertices[19])),
            (self.vertices[23] - self.vertices[21]) / np.linalg.norm((self.vertices[23] - self.vertices[21])),
            (self.vertices[21] - self.vertices[37]) / np.linalg.norm((self.vertices[21] - self.vertices[37])),
            (self.vertices[39] - self.vertices[37]) / np.linalg.norm((self.vertices[39] - self.vertices[37])),
            (self.vertices[21] - self.vertices[17]) / np.linalg.norm((self.vertices[21] - self.vertices[17])),
            (self.vertices[17] - self.vertices[16]) / np.linalg.norm((self.vertices[17] - self.vertices[16])),
            (self.vertices[16] - self.vertices[20]) / np.linalg.norm((self.vertices[16] - self.vertices[20])),
            (self.vertices[16] - self.vertices[32]) / np.linalg.norm((self.vertices[16] - self.vertices[32])),
            (self.vertices[17] - self.vertices[33]) / np.linalg.norm((self.vertices[17] - self.vertices[33])),
            (self.vertices[33] - self.vertices[32]) / np.linalg.norm((self.vertices[33] - self.vertices[32])),
            (self.vertices[32] - self.vertices[0]) / np.linalg.norm((self.vertices[32] - self.vertices[0])),
            (self.vertices[0] - self.vertices[4]) / np.linalg.norm((self.vertices[0] - self.vertices[4])),
            (self.vertices[36] - self.vertices[4]) / np.linalg.norm((self.vertices[36] - self.vertices[4])),
            (self.vertices[37] - self.vertices[5]) / np.linalg.norm((self.vertices[37] - self.vertices[5])),
            (self.vertices[5] - self.vertices[1]) / np.linalg.norm((self.vertices[5] - self.vertices[1])),
            (self.vertices[1] - self.vertices[33]) / np.linalg.norm((self.vertices[1] - self.vertices[33])),
            (self.vertices[7] - self.vertices[15]) / np.linalg.norm((self.vertices[7] - self.vertices[15])),
            (self.vertices[11] - self.vertices[15]) / np.linalg.norm((self.vertices[11] - self.vertices[15])),
            (self.vertices[15] - self.vertices[47]) / np.linalg.norm((self.vertices[15] - self.vertices[47])),
            (self.vertices[47] - self.vertices[45]) / np.linalg.norm((self.vertices[47] - self.vertices[45])),
            (self.vertices[45] - self.vertices[13]) / np.linalg.norm((self.vertices[45] - self.vertices[13])),
            (self.vertices[13] - self.vertices[5]) / np.linalg.norm((self.vertices[13] - self.vertices[5])),
            (self.vertices[47] - self.vertices[31]) / np.linalg.norm((self.vertices[47] - self.vertices[31])),
            (self.vertices[43] - self.vertices[27]) / np.linalg.norm((self.vertices[43] - self.vertices[27])),
            (self.vertices[27] - self.vertices[31]) / np.linalg.norm((self.vertices[27] - self.vertices[31])),
            (self.vertices[42] - self.vertices[26]) / np.linalg.norm((self.vertices[42] - self.vertices[26])),
            (self.vertices[27] - self.vertices[26]) / np.linalg.norm((self.vertices[27] - self.vertices[26])),
            (self.vertices[26] - self.vertices[30]) / np.linalg.norm((self.vertices[26] - self.vertices[30])),
            (self.vertices[46] - self.vertices[30]) / np.linalg.norm((self.vertices[46] - self.vertices[30])),
            (self.vertices[14] - self.vertices[46]) / np.linalg.norm((self.vertices[14] - self.vertices[46])),
            (self.vertices[46] - self.vertices[44]) / np.linalg.norm((self.vertices[46] - self.vertices[44])),
            (self.vertices[44] - self.vertices[12]) / np.linalg.norm((self.vertices[44] - self.vertices[12])),
            (self.vertices[12] - self.vertices[4]) / np.linalg.norm((self.vertices[12] - self.vertices[4])),
            (self.vertices[12] - self.vertices[8]) / np.linalg.norm((self.vertices[12] - self.vertices[8])),
            (self.vertices[8] - self.vertices[0]) / np.linalg.norm((self.vertices[8] - self.vertices[0])),
            (self.vertices[8] - self.vertices[40]) / np.linalg.norm((self.vertices[8] - self.vertices[40])),
            (self.vertices[41] - self.vertices[40]) / np.linalg.norm((self.vertices[41] - self.vertices[40])),
            (self.vertices[41] - self.vertices[9]) / np.linalg.norm((self.vertices[41] - self.vertices[9])),
            (self.vertices[9] - self.vertices[1]) / np.linalg.norm((self.vertices[9] - self.vertices[1])),
            (self.vertices[9] - self.vertices[13]) / np.linalg.norm((self.vertices[9] - self.vertices[13])),
            (self.vertices[44] - self.vertices[28]) / np.linalg.norm((self.vertices[44] - self.vertices[28])),
            (self.vertices[28] - self.vertices[30]) / np.linalg.norm((self.vertices[28] - self.vertices[30])),
            (self.vertices[28] - self.vertices[24]) / np.linalg.norm((self.vertices[28] - self.vertices[24])),
            (self.vertices[24] - self.vertices[40]) / np.linalg.norm((self.vertices[24] - self.vertices[40])),
            (self.vertices[24] - self.vertices[25]) / np.linalg.norm((self.vertices[24] - self.vertices[25])),
            (self.vertices[25] - self.vertices[41]) / np.linalg.norm((self.vertices[25] - self.vertices[41])),
            (self.vertices[25] - self.vertices[29]) / np.linalg.norm((self.vertices[25] - self.vertices[29])),
            (self.vertices[29] - self.vertices[31]) / np.linalg.norm((self.vertices[29] - self.vertices[31])),
            (self.vertices[29] - self.vertices[45]) / np.linalg.norm((self.vertices[29] - self.vertices[45]))
        ])

        return directions_array